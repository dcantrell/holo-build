XZ-compressed POSIX tar archive
    >> .INSTALL is regular file (mode: 644, owner: 0, group: 0), content is data as shown below
        post_install() {
        chown foouser:foogroup /etc/files/foo.toml
        echo setup
        echo setup
        echo setup 1
        echo setup 2
        echo setup 2
        }
        post_upgrade() {
        post_install
        }
        post_remove() {
        echo cleanup
        echo cleanup
        echo cleanup 1
        echo cleanup 1
        echo cleanup 2
        }
    >> .MTREE is regular file (mode: 644, owner: 0, group: 0), content is GZip-compressed mtree metadata archive
        >> ./.INSTALL gid=0 md5digest=a8ddad15e5d73940123c70b29f01e39c mode=644 sha256digest=6f3d87defc7678acf46c90dc8853a68bc59e11c40153c03d029ef1c499a48b92 size=244 time=0.0 type=file uid=0
        >> ./.PKGINFO gid=0 md5digest=b9b3955e4cef9587ca5f9609fe0b6e17 mode=644 sha256digest=e2a600a30f884c3670162e5007b62aebe966d10f1fa299732fd7bbb260c8d43a size=627 time=0.0 type=file uid=0
        >> ./etc gid=0 mode=755 time=0.0 type=dir uid=0
        >> ./etc/empty.toml gid=0 md5digest=d41d8cd98f00b204e9800998ecf8427e mode=644 sha256digest=e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 size=0 time=0.0 type=file uid=0
        >> ./etc/files gid=0 mode=755 time=0.0 type=dir uid=0
        >> ./etc/files/foo.conf gid=0 md5digest=5fb7ba7e8447a836e774b66155f5776a mode=644 sha256digest=f13a55b71d31ec3df35f99d6b6332b23a4967312314456941aff922a7d354818 size=8 time=0.0 type=file uid=0
        >> ./etc/files/foo.toml gid=0 md5digest=15dfaf6e4d94d2bf189ea1bed8ea3cd0 mode=644 sha256digest=e2feaebbf4dc2af197ef61f4fc49198be96bea13113b78c26ab57e93d7332011 size=1240 time=0.0 type=file uid=0
        >> ./etc/links gid=0 mode=755 time=0.0 type=dir uid=0
        >> ./etc/links/bar.conf gid=0 link=bar.target mode=777 time=0.0 type=link uid=0
        >> ./etc/links/foo.conf gid=0 link=/etc/files/foo.conf mode=777 time=0.0 type=link uid=0
        >> ./var gid=0 mode=755 time=0.0 type=dir uid=0
        >> ./var/lib gid=0 mode=755 time=0.0 type=dir uid=0
        >> ./var/lib/foo gid=0 mode=755 time=0.0 type=dir uid=0
        >> ./var/lib/foo/bar gid=2323 mode=700 time=0.0 type=dir uid=4242
        >> ./var/lib/foo/baz gid=0 mode=755 time=0.0 type=dir uid=0
    >> .PKGINFO is regular file (mode: 644, owner: 0, group: 0), content is data as shown below
        # Generated by holo-build
        pkgname = foo
        pkgver = 1.0.2.3-1
        pkgdesc = my foo bar package
        url = 
        packager = Holo Build <holo.build@example.org>
        size = 38141
        arch = any
        license = custom:none
        replaces = foo-bar<2.1
        conflict = qux>2.0
        conflict = qux<=1.2.0
        provides = foo-bar
        provides = foo-baz
        backup = etc/empty.toml
        backup = etc/files/foo.conf
        backup = etc/files/foo.toml
        depend = bar>=2.1
        depend = bar<3.0
        depend = baz
        makedepend = holo-build
        makepkgopt = !strip
        makepkgopt = docs
        makepkgopt = libtool
        makepkgopt = staticlibs
        makepkgopt = emptydirs
        makepkgopt = !zipman
        makepkgopt = !purge
        makepkgopt = !upx
        makepkgopt = !debug
    >> etc/ is directory (mode: 755, owner: 0, group: 0)
    >> etc/empty.toml is regular file (mode: 644, owner: 0, group: 0), content is empty file
    >> etc/files/ is directory (mode: 755, owner: 0, group: 0)
    >> etc/files/foo.conf is regular file (mode: 644, owner: 0, group: 0), content is data as shown below
        foo
        foo
    >> etc/files/foo.toml is regular file (mode: 644, owner: 0, group: 0), content is data as shown below
        # This testcase covers all the basic syntax elements of package definitions.
        
        [package]
        name = "foo"
        version = "1.0.2.3"
        description = "my foo bar package"
        author = "Holo Build <holo.build@example.org>"
        requires = ["bar>=2.1", "bar<3.0", "baz"]
        provides = ["foo-bar", "foo-baz"]
        conflicts = ["qux>2.0", "qux<=1.2.0"]
        replaces = ["foo-bar<2.1"]
        setupScript = """
        echo setup
        echo setup
        """
        cleanupScript = """
        echo cleanup
        echo cleanup
        """
        
        [[symlink]]
        path = "/etc/links/foo.conf"
        target = "/etc/files/foo.conf"
        
        [[symlink]]
        path = "/etc/links/bar.conf"
        target = "bar.target"
        
        [[directory]]
        path = "/var/lib/foo/bar"
        mode = "0700"
        owner = 4242
        group = 2323
        
        [[directory]]
        path = "/var/lib/foo/baz"
        
        [[file]]
        path = "/etc/files/foo.conf"
        content = """
        foo
        foo
        """
        
        [[file]]
        path = "/etc/files/foo.toml"
        contentFrom = "input.toml" # check handling of relative paths
        owner = "foouser"
        group = "foogroup"
        
        [[file]]
        path = "/etc/empty.toml"
        contentFrom = "/dev/null" # check handling of absolute paths
        
        [[action]]
        on = "setup"
        script = "echo setup 1"
        
        [[action]]
        on = "cleanup"
        script = """
        echo cleanup 1
        echo cleanup 1
        """
        
        [[action]]
        on = "setup"
        script = """
        echo setup 2
        echo setup 2
        """
        
        [[action]]
        on = "cleanup"
        script = "echo cleanup 2"
    >> etc/links/ is directory (mode: 755, owner: 0, group: 0)
    >> etc/links/bar.conf is symlink to bar.target
    >> etc/links/foo.conf is symlink to /etc/files/foo.conf
    >> var/ is directory (mode: 755, owner: 0, group: 0)
    >> var/lib/ is directory (mode: 755, owner: 0, group: 0)
    >> var/lib/foo/ is directory (mode: 755, owner: 0, group: 0)
    >> var/lib/foo/bar/ is directory (mode: 700, owner: 4242, group: 2323)
    >> var/lib/foo/baz/ is directory (mode: 755, owner: 0, group: 0)

